{"version":3,"sources":["webpack:///./packages/mdc-theme/mdc-theme.scss"],"names":[],"mappings":";;;;;;;AA8BE;EAGM;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;CARP;;AAeK;EA0CF;EACA;EACA;CArDH;;AASK;EA0CF;EACA;EACA;CA/CH;;AASK;EAoCF;EACA;EACA;CAzCH;;AAGK;EAoCF;EACA;EACA;CAnCH;;AATK;EA0CF;EACA;EACA;CA7BH;;AAfK;EA0CF;EACA;EACA;CAvBH;;AArBK;EA0CF;EACA;EACA;CAjBH;;AA3BK;EA0CF;EACA;EACA;CAXH;;AAjCK;EA0CF;EACA;EACA;CALH;;AAvCK;EA0CF;EACA;EACA;CACH;;AA7CK;EA0CF;EACA;EACA;CAOH;;AAnDK;EA0CF;EACA;EACA;CAaH;;AAzDK;EA0CF;EACA;EACA;CAmBH;;AA/DK;EA0CF;EACA;EACA;CAyBH;;AArEK;EA0CF;EACA;EACA;CA+BH;;AA3EK;EA0CF;EACA;EACA;CAqCH;;AAjFK;EA0CF;EACA;EACA;CA2CH;;AAvFK;EA0CF;EACA;EACA;CAiDH;;AA7FK;EA0CF;EACA;EACA;CAuDH;;AAnGK;EA0CF;EACA;EACA;CA6DH;;AAzGK;EA0CF;EACA;EACA;CAmEH;;AA/GK;EA0CF;EACA;EACA;CAyEH;;AArHK;EA0CF;EACA;EACA;CA+EH;;AA3HK;EA0CF;EACA;EACA;CAqFH;;AAjHG;EA0BA;EACA;EACA;CA2FH;;AAvHG;EA0BA;EACA;EACA","file":"mdc.theme.css","sourcesContent":["//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@import \"@material/feature-targeting/functions\";\n@import \"@material/feature-targeting/mixins\";\n@import \"./variables\";\n@import \"./functions\";\n\n@mixin mdc-theme-core-styles($query: mdc-feature-all()) {\n  $feat-color: mdc-feature-create-target($query, color);\n\n  :root {\n    @include mdc-feature-targets($feat-color) {\n      @each $style in map-keys($mdc-theme-property-values) {\n        --mdc-theme-#{$style}: #{map-get($mdc-theme-property-values, $style)};\n      }\n    }\n  }\n\n  @each $style in map-keys($mdc-theme-property-values) {\n    @if $style != \"background\" and $style != \"surface\" {\n      .mdc-theme--#{$style} {\n        @include mdc-feature-targets($feat-color) {\n          @include mdc-theme-prop(color, $style, true);\n        }\n      }\n    } @else {\n      .mdc-theme--#{$style} {\n        @include mdc-feature-targets($feat-color) {\n          @include mdc-theme-prop(background-color, $style);\n        }\n      }\n    }\n  }\n\n  // CSS rules for using primary and secondary (plus light/dark variants) as background colors.\n  @each $style in (\"primary\", \"secondary\") {\n    .mdc-theme--#{$style}-bg {\n      @include mdc-feature-targets($feat-color) {\n        @include mdc-theme-prop(background-color, $style, true);\n      }\n    }\n  }\n}\n\n// Applies the correct theme color style to the specified property.\n// $property is typically color or background-color, but can be any CSS property that accepts color values.\n// $style should be one of the map keys in $mdc-theme-property-values (_variables.scss), or a color value.\n@mixin mdc-theme-prop($property, $style, $important: false) {\n  $important-rule: if($important, \"!important\", \"\");\n\n  @if mdc-theme-is-var-with-fallback_($style) {\n    #{$property}: mdc-theme-get-var-fallback_($style) #{$important-rule};\n    /* @alternate */\n    #{$property}: mdc-theme-var_($style) #{$important-rule};\n  } @else if mdc-theme-is-valid-theme-prop-value_($style) {\n    #{$property}: $style #{$important-rule};\n  } @else {\n    @if not map-has-key($mdc-theme-property-values, $style) {\n      @error \"Invalid style: '#{$style}'. Choose one of: #{map-keys($mdc-theme-property-values)}\";\n    }\n    $value: map-get($mdc-theme-property-values, $style);\n\n    #{$property}: $value #{$important-rule};\n    /* @alternate */\n    #{$property}: var(--mdc-theme-#{$style}, $value) #{$important-rule};\n  }\n}\n"],"sourceRoot":""}